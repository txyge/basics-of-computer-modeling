def middle_square_method(R0, n):

    #:R0: начальное число (например, 0.583)
    #:n: количество чисел в последовательности
   
    # Создаем пустой список для хранения последовательности
    sequence = []
    # Инициализируем текущее число, начиная с заданного семени
    current = R0

    # Генерируем последовательность псевдослучайных чисел
    for _ in range(n):
        # Возводим текущее число в квадрат и удаляем точку
        squared = str(current ** 2).replace('.', '')
        # Добавляем нули спереди, если строка меньше 8 символов
        squared = squared.zfill(8)
        # Извлекаем четыре средние цифры и преобразуем их в следующее число
        next_number = float('0.' + squared[2:6])
        # Добавляем следующее число в последовательность
        sequence.append(next_number)
        # Обновляем текущее число для следующей итерации
        current = next_number

    # Возвращаем сгенерированную последовательность
    return sequence

# Пример вызова
R0 = 0.583
n = 6
sequence = middle_square_method(R0, n)
print(sequence)